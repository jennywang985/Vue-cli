{"remainingRequest":"D:\\project\\order_vue\\admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\order_vue\\admin-master\\src\\views\\Security.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\order_vue\\admin-master\\src\\views\\Security.vue","mtime":1554856434254},{"path":"D:\\project\\order_vue\\admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\order_vue\\admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\project\\order_vue\\admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\order_vue\\admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('Password cannot be empty'));\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please input a password'));\n      } else {\n        if (this.ruleForm2.checkPass !== '') {\n          this.$refs.ruleForm2.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please enter your password again'));\n      } else if (value !== this.ruleForm2.pass) {\n        callback(new Error('Two inconsistent passwords!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm2: {\n        pass: '',\n        checkPass: '',\n        pwe: ''\n      },\n      rules2: {\n        pass: [\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPass: [\n          { validator: validatePass2, trigger: 'blur' }\n        ],\n        pwe: [\n          { validator: checkAge, trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n}\n",{"version":3,"sources":["Security.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Security.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"Security\">\n    <el-breadcrumb>\n      <el-breadcrumb-item to=\"/main\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>Security management</el-breadcrumb-item>\n    </el-breadcrumb>\n      <br>\n      <div style=\"width:800px\">\n    <el-form  :model=\"ruleForm2\"  status-icon  :rules=\"rules2\"  ref=\"ruleForm2\"  label-width=\"100px\"  class=\"demo-ruleForm\">\n      <el-form-item label=\"OldPassword\" prop=\"pwe\">\n        <el-input type=\"password\" v-model=\"ruleForm2.pass\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"NewPassword\" prop=\"pass\">\n        <el-input type=\"password\" v-model=\"ruleForm2.checkPass\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Confirm\" prop=\"checkPass\">\n        <el-input v-model.number=\"ruleForm2.pwe\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm2')\">Confirm</el-button>\n        <el-button @click=\"resetForm('ruleForm2')\">Cancel</el-button>\n      </el-form-item>\n    </el-form>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    data() {\n      var checkAge = (rule, value, callback) => {\n        if (!value) {\n          return callback(new Error('Password cannot be empty'));\n        }\n      };\n      var validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('Please input a password'));\n        } else {\n          if (this.ruleForm2.checkPass !== '') {\n            this.$refs.ruleForm2.validateField('checkPass');\n          }\n          callback();\n        }\n      };\n      var validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('Please enter your password again'));\n        } else if (value !== this.ruleForm2.pass) {\n          callback(new Error('Two inconsistent passwords!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        ruleForm2: {\n          pass: '',\n          checkPass: '',\n          pwe: ''\n        },\n        rules2: {\n          pass: [\n            { validator: validatePass, trigger: 'blur' }\n          ],\n          checkPass: [\n            { validator: validatePass2, trigger: 'blur' }\n          ],\n          pwe: [\n            { validator: checkAge, trigger: 'blur' }\n          ]\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }\n</script>"]}]}
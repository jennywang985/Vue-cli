{"remainingRequest":"D:\\project\\order_vue\\xiaofeiniu-admin-master\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\order_vue\\xiaofeiniu-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\order_vue\\xiaofeiniu-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\order_vue\\xiaofeiniu-admin-master\\src\\components\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\order_vue\\xiaofeiniu-admin-master\\src\\components\\Table.vue","mtime":1554854151293},{"path":"D:\\project\\order_vue\\xiaofeiniu-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\order_vue\\xiaofeiniu-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\project\\order_vue\\xiaofeiniu-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\order_vue\\xiaofeiniu-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      dialogTableDetailVisible: false,\n      qrcodeData: '' //二维码base64二进制数据\n\n    };\n  },\n  props: ['data'],\n  methods: {\n    getTableColor: function getTableColor(status) {\n      if (status == 1) return '#67C23A';else if (status == 2) return '#E6A23C';else if (status == 3) return '#F56C6C';else return '#909399';\n    },\n    showTableDetail: function showTableDetail() {\n      // console.log(this.data) 当前桌子的数据\n      this.dialogTableDetailVisible = true;\n    },\n    closeDialogTableDetail: function closeDialogTableDetail() {\n      this.dialogTableDetailVisible = false;\n    },\n    makeQRCode: function makeQRCode() {\n      var _this = this;\n\n      //创建二维码--注意此方法不能再当前的mouted中调用,因为绘图必须的canvas在el-dialog中,对话框在组件家再试并不在DOM树上\n      var qrcode = require('qrcode'); // 每个桌子的URL应该形如:\n      // http://127.0.0.1:8092/#/3\n\n\n      var tableUrl = this.$store.state.appUrl + '/#/' + this.data.tid; // 把绘制等到的图片二进制数据转换为字符串编码\n\n      qrcode.toDataURL(tableUrl, {\n        width: 300,\n        errorCorrectionLevel: 'H'\n      }, function (err, url) {\n        _this.qrcodeData = url;\n      });\n    }\n  }\n};",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,wBAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,EAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,KAAA,EAAA,CAAA,MAAA,CAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,MADA,EACA;AACA,UAAA,MAAA,IAAA,CAAA,EAAA,OAAA,SAAA,CAAA,KACA,IAAA,MAAA,IAAA,CAAA,EAAA,OAAA,SAAA,CAAA,KACA,IAAA,MAAA,IAAA,CAAA,EAAA,OAAA,SAAA,CAAA,KACA,OAAA,SAAA;AACA,KANA;AAOA,IAAA,eAPA,6BAOA;AACA;AACA,WAAA,wBAAA,GAAA,IAAA;AACA,KAVA;AAWA,IAAA,sBAXA,oCAWA;AACA,WAAA,wBAAA,GAAA,KAAA;AACA,KAbA;AAcA,IAAA,UAdA,wBAcA;AAAA;;AACA;AACA,UAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA,CAFA,CAGA;AACA;;;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,GAAA,KAAA,IAAA,CAAA,GAAA,CALA,CAMA;;AACA,MAAA,MAAA,CAAA,SAAA,CAAA,QAAA,EAAA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,oBAAA,EAAA;AAFA,OAAA,EAGA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,GAAA;AACA,OALA;AAMA;AA3BA;AARA,CAAA","sourcesContent":["<template>\n  <div class=\"xfn-table-info\">\n    <el-card shadow=\"hover\">\n      <div class=\"xfn-table\" :style=\"{background:getTableColor(data.status)}\">{{data.tid}}Table Number: {{data.status | tableStatus}}</div>\n      <el-button type=\"success\" plain size=\"mini\" @click=\"showTableDetail\">Details</el-button>\n      <el-button type=\"danger\" plain size=\"mini\">Update</el-button>\n    </el-card>\n\n    <!-- 桌台详情的对话框 -->\n    <el-dialog :title=\"data.tid+'Table Details'\" :visible='dialogTableDetailVisible' :before-close='closeDialogTableDetail'>\n      <!-- 对话框主体 -->\n      <el-tabs type='border-card' @tab-click='makeQRCode'>\n        <el-tab-pane label='Table State'>state loading...</el-tab-pane>\n        <el-tab-pane label='Table QR Code'>\n          <img :src=\"qrcodeData\" alt=\"\">\n        </el-tab-pane>\n      </el-tabs>\n      <!-- 对话框尾部 -->\n      <div slot='footer'>\n        <el-button type='primary' @click=\"dialogTableDetailVisible=false\" >Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.xfn-table-info {\n  padding: 3px;\n  text-align: center;\n\n  .xfn-table {\n    width: 90%;\n    height: 120px;\n    line-height: 120px;\n    border: 1px solid #aaa;\n    border-radius: 50%;\n    box-shadow: 3px -4px 5px #666;\n    margin: 5px auto;\n  }\n}\n</style>\n\n<script>\nexport default {\n    data(){\n      return{\n        dialogTableDetailVisible:false,\n        qrcodeData:''  //二维码base64二进制数据\n      }\n    },\n    props:['data'],\n    methods:{\n      getTableColor(status){\n        if(status==1) return '#67C23A';\n        else if(status==2) return '#E6A23C';\n        else if(status==3) return '#F56C6C';\n        else return '#909399'\n      },\n      showTableDetail(){\n        // console.log(this.data) 当前桌子的数据\n        this.dialogTableDetailVisible=true;\n      },\n      closeDialogTableDetail(){\n        this.dialogTableDetailVisible=false;\n      },\n      makeQRCode(){\n        //创建二维码--注意此方法不能再当前的mouted中调用,因为绘图必须的canvas在el-dialog中,对话框在组件家再试并不在DOM树上\n        var qrcode=require('qrcode');\n        // 每个桌子的URL应该形如:\n        // http://127.0.0.1:8092/#/3\n        var tableUrl=this.$store.state.appUrl+'/#/'+this.data.tid;\n        // 把绘制等到的图片二进制数据转换为字符串编码\n        qrcode.toDataURL(tableUrl, {\n          width:300,\n          errorCorrectionLevel:'H'\n        }, (err,url)=>{\n          this.qrcodeData=url\n        })\n      }\n    }\n}\n</script>\n\n"],"sourceRoot":"src/components"}]}